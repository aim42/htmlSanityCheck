permissions:
  contents: read
  pages: write
  id-token: write

name: GitHub Pages

on:
  pull_request:
  push:
  workflow_dispatch:
    inputs:
      perform_step:
        type: boolean
        description: 'Publish GH Page'
        default: false

jobs:
  build-artifacts:
    uses: ./.github/workflows/build-artifacts.yml
    with:
      # SonarQube requires JDK 17 or higher
      java-version: '17'

  pages:
    needs: build-artifacts
    runs-on: ubuntu-latest
    concurrency:
      group: "${{ github.workflow }}-${{ github.ref }}"
    env:
      DTC_HEADLESS: true
    steps:
      - name: Install dot (Graphviz)
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}"
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache .doctoolchain
        uses: actions/cache@v2
        with:
          path: ~/.doctoolchain
          key: "${{ runner.os }}-doctoolchain-${{ hashFiles('**/lockfiles') }}"
          restore-keys: ${{ runner.os }}-doctoolchain

      - name: Check out
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Generate Pages
        run: ./generate-pages

      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: public
          retention-days: 7

      - name: Collect state upon failure
        if: failure()
        run: |
          echo "Git:"
          git status
          echo "Env:"
          env
          echo "PWD:"
          pwd
          echo "Files:"
          find * -ls

  publish:
    runs-on: ubuntu-latest
    needs: pages
    if: ${{ github.event.inputs.perform_step }}
    steps:
      - name: Deploy Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

