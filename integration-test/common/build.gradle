plugins {
    id 'org.asciidoctor.jvm.convert' version '4.0.3'
}

repositories {
    mavenCentral()
}

def projectRoot = "../.."
task copyReadmeResources(type: Copy) {
    group 'Verification'
    description 'Copy resources of READMEs for integration test'

    from projectRoot
    include '*.properties'
    into "${Project.DEFAULT_BUILD_DIR_NAME}/docs"
    doLast {
        String linkPath = "${Project.DEFAULT_BUILD_DIR_NAME}/docs/images"
        java.nio.file.Path target = java.nio.file.Paths.get("../../../../src/docs/images")
        File linkFile = file(linkPath)
        java.nio.file.Path link = linkFile.toPath()
        logger.quiet("Creating symlink from '{}' to '{}'", target, link)
        if (linkFile.exists()) {
            linkFile.delete()
        }
        java.nio.file.Files.createSymbolicLink(link, target)
    }
}

task buildReadmeRoot(type: org.asciidoctor.gradle.jvm.AsciidoctorTask) {
    group 'Verification'
    description 'Convert root README for integration test'

    sourceDir projectRoot
    sources {
        include 'README.adoc'
    }
    baseDirFollowsSourceFile()
    outputDir file("${Project.DEFAULT_BUILD_DIR_NAME}/docs")
    attributes (
            "imagesdir": "images"
    )
}
buildReadmeRoot.dependsOn(copyReadmeResources)

task buildReadmeGradlePlugin(type: org.asciidoctor.gradle.jvm.AsciidoctorTask) {
    group 'Verification'
    description 'Convert Gradle Plugin README for integration test'

    sourceDir projectRoot
    sources {
        include 'htmlSanityCheck-gradle-plugin/README.adoc'
    }
    baseDirFollowsSourceFile()
    outputDir file("${Project.DEFAULT_BUILD_DIR_NAME}/docs")
    attributes (
            "imagesdir": "../images"
    )
}
buildReadmeGradlePlugin.dependsOn(buildReadmeRoot)

task buildReadmeAll() {
    group 'Verification'
    description 'Convert all READMEs for integration test'
}
buildReadmeAll.dependsOn(buildReadmeRoot, buildReadmeGradlePlugin)
build.dependsOn(buildReadmeAll)

/*
 * Copyright Gerd Aschemann and aim42 contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */
