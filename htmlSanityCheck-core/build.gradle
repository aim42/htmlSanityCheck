import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    alias(libs.plugins.gitProperties)
}

dependencies {
    implementation (libs.commons.validator) {
        // Having a vulnerability here ...
        exclude group: 'commons-collections', module: 'commons-collections'
    }
    implementation libs.slf4j.api
    testImplementation libs.slf4j.nop
    // jsoup is our awesome html parser, see jsoup.org
    implementation libs.jsoup
    implementation libs.string.similarity
    compileOnly libs.lombok
    annotationProcessor libs.lombok
    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok
    testImplementation platform("org.codehaus.groovy:groovy-bom:${GroovySystem.version}")
    testImplementation 'org.codehaus.groovy:groovy-xml'

    testImplementation libs.wiremock.testcontainers
    testImplementation libs.testcontainers.junit.jupiter
}

gitProperties {
    // specify the location of the generated file
//    gitPropertiesResourceDir = file("${project.projectDir}/build/resources/main")

    // specify the properties to include
    keys = ['git.branch',
            'git.build.host',
            'git.build.user.email',
            'git.build.user.name',
            'git.build.version',
            'git.closest.tag.commit.count',
            'git.closest.tag.name',
            'git.commit.id',
            'git.commit.id.abbrev',
            'git.commit.id.describe',
            'git.commit.message.full',
            'git.commit.message.short',
            'git.commit.time',
            'git.commit.user.email',
            'git.commit.user.name',
            'git.dirty',
            'git.remote.origin.url',
            'git.tags',
            'git.total.commit.count',
    ]
}

java {
    withJavadocJar()
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

tasks.register('copyResourceImages', Copy) {
    from('src/main/resources') {
        include '**/*.png'
    }
    into processResources.destinationDir
}

processResources {
    dependsOn copyResourceImages, generateGitProperties

    exclude '**/*.png'
    inputs.property "version", project.version
    filter ReplaceTokens, tokens: [version: project.version]
}

/*
 * Copyright Gernot Starke and aim42 contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */
