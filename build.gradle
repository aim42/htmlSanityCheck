buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'java'

    alias(libs.plugins.gradle.versions)
}

allprojects {
    group = group
    version = version

    repositories {
        mavenLocal()
        mavenCentral()
    }

    tasks.register("info") {
        doLast
                {
                    println "project.name         : " + project.name
                    println "version              : " + version
                    println "project.version      : " + project.version
                    println "project.path         : " + project.path
                    println "projectDir           : " + projectDir
                    println "groupId              : " + project.group
                    println "targetCompatibility  : " + java.targetCompatibility
                    println "=" * 80
                }
    }
}

configure(subprojects) {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'

    description "${rootProject.description} - Module ${project.name}"

    dependencies {
        implementation platform(libs.groovy.bom)
        implementation 'org.codehaus.groovy:groovy'

        implementation platform (libs.slf4j.bom)

        testImplementation platform (libs.spock)
        testImplementation "org.spockframework:spock-core"
        testImplementation "org.spockframework:spock-junit4"

        testImplementation libs.junit.vintage
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(8)
        }
    }

    publishing {
        repositories {
            maven {
                name = 'myLocalRepositoryForFullIntegrationTests'
                //noinspection GrDeprecatedAPIUsage
                url = new File (project.parent.buildDir, "maven-repo")
            }
            mavenLocal()
        }
    }

    tasks.named('test', Test) {
        useJUnitPlatform()
    }

    // The CodeNarc plugin performs quality checks on your projectâ€™s
    // Groovy source files using CodeNarc and generates reports from these checks.
    // apply plugin: 'codenarc'
}

tasks.register("integrationTest") {
    group("Verification")
    description("Run overall integration tests")

    final String INTEGRATION_TEST_DIRECTORY = "integration-test/gradle-plugin"

    doLast {
        def result = exec {
            workingDir INTEGRATION_TEST_DIRECTORY
            commandLine "./gradlew", "clean", "htmlSanityCheck", "-PhtmlSanityCheckVersion=${project.version}"
        }
        logger.debug "Script output: $result"
        final File testIndex = new File(INTEGRATION_TEST_DIRECTORY, "build/reports/index.html")
        assert testIndex.exists()
    }
}
integrationTest.dependsOn(
        ':htmlSanityCheck-core:publishAllPublicationsToMyLocalRepositoryForFullIntegrationTestsRepository',
        ':htmlSanityCheck-gradle-plugin:publishAllPublicationsToMyLocalRepositoryForFullIntegrationTestsRepository'
)

/*
 * Copyright Gernot Starke and aim42 contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */
