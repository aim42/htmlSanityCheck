buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'java'

    alias(libs.plugins.jqassistant)
    alias(libs.plugins.gradle.versions)
}

allprojects {
    group = group
    version = version

    repositories {
        mavenLocal()
        mavenCentral()
    }

    tasks.register("info") {
        doLast
                {
                    println "project.name         : " + project.name
                    println "version              : " + version
                    println "project.version      : " + project.version
                    println "project.path         : " + project.path
                    println "projectDir           : " + projectDir
                    println "groupId              : " + project.group
                    println "targetCompatibility  : " + java.targetCompatibility
                    println "OS                   : " + System.properties["os.name"]
                    println "Java VM Name         : " + System.properties["java.vm.name"]
                    println "Java VM Vendor       : " + System.properties["java.vm.vendor"]
                    println "Java VM Version      : " + System.properties["java.vm.version"]
                    println "=" * 80
                }
    }
}

configure(subprojects) {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'

    apply plugin: 'jacoco'

    description "${rootProject.description} - Module ${project.name}"

    dependencies {
        testImplementation platform(libs.spock)
        testImplementation "org.spockframework:spock-core"
        testImplementation "org.spockframework:spock-junit4"

        testImplementation libs.junit.vintage
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(8)
        }
    }

    publishing {
        repositories {
            maven {
                name = 'myLocalRepositoryForFullIntegrationTests'
                //noinspection GrDeprecatedAPIUsage
                File baseDir = file(project.parent.buildDir)
                url = new File (baseDir, "maven-repo")
            }
            mavenLocal()
        }
    }

    tasks.named('test', Test) {
        useJUnitPlatform()
    }

    check {
        finalizedBy jacocoTestReport // report is always generated after tests run
    }
    jacocoTestReport {
        dependsOn check // tests are required to run before generating the report
    }
}

ext {
    jqaversion = "2.1.0"
    kejqapluginversion = "1.12.0"
}

jqassistant {
    toolVersion jqaversion
//    plugins "com.buschmais.jqassistant.plugin:java:$jqaversion"
//    plugins "de.kontext-e.jqassistant.plugin:jqassistant.plugin.git:$kejqapluginversion"

    // TODO Which Options are available? '-reset' seems to fail
//    options "-reset"

    scanDirs "."
}


tasks.register("integrationTestOnly") {
    group("Verification")
    description("Run overall integration tests (no publish)")

    final String INTEGRATION_TEST_DIRECTORY = "integration-test/gradle-plugin"

    doLast {
        def result = exec {
            workingDir INTEGRATION_TEST_DIRECTORY
            commandLine System.getProperty("os.name") ==~ /Windows.*/ ? "gradlew.bat" : "./gradlew", "clean", "htmlSanityCheck", "-PhtmlSanityCheckVersion=${project.version}"
        }
        logger.debug "Script output: $result"
        File integrationTestDirectory = file(INTEGRATION_TEST_DIRECTORY)
        final File testIndex = new File (integrationTestDirectory, "build/reports/index.html")
        assert testIndex.exists()
    }
}
integrationTestOnly.mustRunAfter(
        ':htmlSanityCheck-core:publishAllPublicationsToMyLocalRepositoryForFullIntegrationTestsRepository',
        ':htmlSanityCheck-gradle-plugin:publishAllPublicationsToMyLocalRepositoryForFullIntegrationTestsRepository'
)
tasks.register("integrationTest") {
    group("Verification")
    description("Run overall integration tests (and publish first)")
}
integrationTest.dependsOn(
        ':htmlSanityCheck-core:publishAllPublicationsToMyLocalRepositoryForFullIntegrationTestsRepository',
        ':htmlSanityCheck-gradle-plugin:publishAllPublicationsToMyLocalRepositoryForFullIntegrationTestsRepository',
        'integrationTestOnly'
)

/*
 * Copyright Gernot Starke and aim42 contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */
